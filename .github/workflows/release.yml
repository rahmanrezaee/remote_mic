name: Build and Release APKs

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required for creating releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Release APKs
        run: ./gradlew assembleRelease --stacktrace

      - name: Build AAB
        run: ./gradlew bundleRelease

      - name: List generated files (Debug)
        run: |
          echo "=== APK Files ==="
          find app/build/outputs/apk -name "*.apk" -type f
          echo "=== AAB Files ==="
          find app/build/outputs/bundle -name "*.aab" -type f
          echo "=== Directory Structure ==="
          ls -la app/build/outputs/apk/release/ || echo "Release directory not found"

      - name: Upload artifacts (for debugging)
        uses: actions/upload-artifact@v3
        with:
          name: build-outputs
          path: |
            app/build/outputs/apk/**/*.apk
            app/build/outputs/bundle/**/*.aab

      - name: Get file sizes
        id: sizes
        run: |
          # Check which files actually exist and get their sizes
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            echo "universal_size=$(du -h app/build/outputs/apk/release/app-release.apk | cut -f1)" >> $GITHUB_OUTPUT
            echo "Found universal APK"
          fi
          
          if [ -f "app/build/outputs/apk/release/app-arm64-v8a-release.apk" ]; then
            echo "arm64_size=$(du -h app/build/outputs/apk/release/app-arm64-v8a-release.apk | cut -f1)" >> $GITHUB_OUTPUT
            echo "Found ARM64 APK"
          fi
          
          if [ -f "app/build/outputs/bundle/release/app-release.aab" ]; then
            echo "aab_size=$(du -h app/build/outputs/bundle/release/app-release.aab | cut -f1)" >> $GITHUB_OUTPUT
            echo "Found AAB"
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
          body: |
            ## 🎉 Remote Mic ${{ github.ref_name }}
            
            Transform two phones into a synchronized recording system!
            
            ### 📱 Download APK
            
            **Universal APK**: Works on all devices
            - Size: ${{ steps.sizes.outputs.universal_size || 'Building...' }}
            - [Download Universal APK](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/app-release.apk)
            
            ### 📦 For Developers
            - **Android App Bundle**: ${{ steps.sizes.outputs.aab_size || 'Building...' }}
            - [Download AAB](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/app-release.aab)
            
            ### 🛠️ Installation
            1. **Enable "Unknown Sources"** in Android Settings → Security
            2. **Download** the APK file above
            3. **Install** and grant required permissions
            
            ### ✨ Features
            - 📱 P2P device connection
            - 🎭 Dynamic Camera/Microphone roles
            - 🎥 4K recording support  
            - 🎙️ High-quality audio capture
            - 📁 Automatic file transfer
            - 🎬 Audio-video merging
            
            ### 📋 Requirements
            - Android 7.0+ (API 24)
            - Camera & microphone permissions
            - Storage permissions
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}